/* =======================================================================
    Configuration

    ### Using CSS 
    Any of the variables can be overridden by setting CSS custom properties
    anywhere in the document. For example:
    ```
    html {
        --base-font-family: MyCustomFont, 'Comic Sans', script;
    }
    .my-component {
        --bg-dark: darkmagenta;
    }
    ```
    ### Using SCSS
    If you are taking advantage of the type setting, media-query, and spacing systems,
    then you must configure the Sass variables. This is because these settings are used
    to generate CSS used by certain contexts and utilities at build time.
========================================================================== */
/*
Typography & Spacing
=================================================== */
/* System fonts are the most performant option */
/* =======================================================================
     Colors
========================================================================== */
/**
*
* Generate consistent font sizes and line heights
* @require $space
*
*/
/* Keep size of fonts consistent */
/* Vertical rhythm */
/* 
We aren't trying to be 100% automatic, 
but synchronizing line-height with our standard spacing 
allows you to create a perfect vertical rhythm, if you feel like it. 
If you do nothing, it should look pretty good anyway.
*/
/**
*
* Takes any valid length value OR sm, md, lg, xl
* See: https://medium.freecodecamp.org/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862
*
* Modified to rems default 16px
* 600px = 37.5rem
* 900px = 56.25rem
* 1200px = 75rem
* 1800px = 112.5rem
*/
/* *
* For radios and checkboxes - the pseudo-checkbox hack
*/
.br0 {
  border-radius: 0;
}

.br1 {
  border-radius: 0.46875rem;
}

.pill {
  border-radius: 900px;
}

.shadow-1 {
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
}

.focus-ring {
  box-shadow: 2px solid var(--outline--focus);
}

.text--dark {
  color: #3e2837;
}

.text--light {
  color: white;
}

.bg--dark {
  background-color: #3e2837;
}

.bg--light {
  background-color: white;
}

.invert {
  filter: invert(100%);
}

.debug,
.debug * {
  outline: 1px dotted darkorange;
}

.dn {
  display: none;
}

.di {
  display: inline;
}

.db {
  display: block;
}

.dib {
  display: inline-block;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

/* 1. Fix for Chrome 44 bug.
 * https://code.google.com/p/chromium/issues/detail?id=506893 */
.flex-auto {
  flex: 1 1 auto;
  min-width: 0;
  /* 1 */
  min-height: 0;
  /* 1 */
}

.flex-none {
  flex: none;
}

.flex-column {
  flex-direction: column;
}

.flex-row {
  flex-direction: row;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}

.flex-column-reverse {
  flex-direction: column-reverse;
}

.flex-row-reverse {
  flex-direction: row-reverse;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.items-baseline {
  align-items: baseline;
}

.items-stretch {
  align-items: stretch;
}

.self-start {
  align-self: flex-start;
}

.self-end {
  align-self: flex-end;
}

.self-center {
  align-self: center;
}

.self-baseline {
  align-self: baseline;
}

.self-stretch {
  align-self: stretch;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.content-start {
  align-content: flex-start;
}

.content-end {
  align-content: flex-end;
}

.content-center {
  align-content: center;
}

.content-between {
  align-content: space-between;
}

.content-around {
  align-content: space-around;
}

.content-stretch {
  align-content: stretch;
}

.flex-grow-1 {
  flex-grow: 1;
}

.flex-shrink-0 {
  flex-shrink: 0;
}

.flex-shrink-1 {
  flex-shrink: 1;
}

.fl {
  float: left;
}

.fr {
  float: right;
}

.fn {
  float: none;
}

/* Nicolas Gallaghers Clearfix solution
   Ref: http://nicolasgallagher.com/micro-clearfix-hack/ */
.cf:before,
.cf:after {
  content: " ";
  display: table;
}

.cf:after {
  clear: both;
}

.cf {
  *zoom: 1;
}

.cl {
  clear: left;
}

.cr {
  clear: right;
}

.cb {
  clear: both;
}

.cn {
  clear: none;
}

.ffbase {
  font-family: var(--base-font-family, -apple-system, BlinkMacSystemFont, "helvetica neue", helvetica, ubuntu, roboto, noto, "segoe ui", arial, sans-serif);
}

.ffheading {
  font-family: var(--heading-font-family, --base-font-family);
}

.fw800 {
  font-weight: 800;
}

.fw700 {
  font-weight: 700;
}

.fw600 {
  font-weight: 600;
}

.fw500 {
  font-weight: 500;
}

.fw400 {
  font-weight: 400;
}

.fw300 {
  font-weight: 300;
}

.fw200 {
  font-weight: 200;
}

.fw100 {
  font-weight: 100;
}

.h100 {
  height: 100%;
}

.mw-100 {
  max-width: 100%;
}

.mw1 {
  max-width: 1rem;
}

.mw2 {
  max-width: 2rem;
}

.mw3 {
  max-width: 4rem;
}

.mw4 {
  max-width: 8rem;
}

.mw5 {
  max-width: 16rem;
}

.mw6 {
  max-width: 32rem;
}

.mw7 {
  max-width: 48rem;
}

.mw8 {
  max-width: 64rem;
}

.mw9 {
  max-width: 96rem;
}

.mw-none {
  max-width: none;
}

.overflow-visible {
  overflow: visible;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-scroll {
  overflow: scroll;
}

.overflow-auto {
  overflow: auto;
}

.overflow-x-visible {
  overflow-x: visible;
}

.overflow-x-hidden {
  overflow-x: hidden;
}

.overflow-x-scroll {
  overflow-x: scroll;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-y-visible {
  overflow-y: visible;
}

.overflow-y-hidden {
  overflow-y: hidden;
}

.overflow-y-scroll {
  overflow-y: scroll;
}

.overflow-y-auto {
  overflow-y: auto;
}

.reset-bg {
  background: none;
}

.reset-list {
  list-style: none;
  text-indent: 0;
  margin: 0;
}

.reset-button {
  border: unset;
  background: unset;
}

.reset-border {
  border: unset;
}

.pa0 {
  padding: 0;
}

.pa1 {
  padding: 0.46875rem;
}

.pa2 {
  padding: 0.9375rem;
}

.pa3 {
  padding: 1.875rem;
}

.pa4 {
  padding: 3.75rem;
}

.pa5 {
  padding: 7.5rem;
}

.pa6 {
  padding: 15rem;
}

.pa7 {
  padding: 30rem;
}

.pl0 {
  padding-left: 0;
}

.pl1 {
  padding-left: 0.46875rem;
}

.pl2 {
  padding-left: 0.9375rem;
}

.pl3 {
  padding-left: 1.875rem;
}

.pl4 {
  padding-left: 3.75rem;
}

.pl5 {
  padding-left: 7.5rem;
}

.pl6 {
  padding-left: 15rem;
}

.pl7 {
  padding-left: 30rem;
}

.pr0 {
  padding-right: 0;
}

.pr1 {
  padding-right: 0.46875rem;
}

.pr2 {
  padding-right: 0.9375rem;
}

.pr3 {
  padding-right: 1.875rem;
}

.pr4 {
  padding-right: 3.75rem;
}

.pr5 {
  padding-right: 7.5rem;
}

.pr6 {
  padding-right: 15rem;
}

.pr7 {
  padding-right: 30rem;
}

.pb0 {
  padding-bottom: 0;
}

.pb1 {
  padding-bottom: 0.46875rem;
}

.pb2 {
  padding-bottom: 0.9375rem;
}

.pb3 {
  padding-bottom: 1.875rem;
}

.pb4 {
  padding-bottom: 3.75rem;
}

.pb5 {
  padding-bottom: 7.5rem;
}

.pb6 {
  padding-bottom: 15rem;
}

.pb7 {
  padding-bottom: 30rem;
}

.pt0 {
  padding-top: 0;
}

.pt1 {
  padding-top: 0.46875rem;
}

.pt2 {
  padding-top: 0.9375rem;
}

.pt3 {
  padding-top: 1.875rem;
}

.pt4 {
  padding-top: 3.75rem;
}

.pt5 {
  padding-top: 7.5rem;
}

.pt6 {
  padding-top: 15rem;
}

.pt7 {
  padding-top: 30rem;
}

.pv0 {
  padding-top: 0;
  padding-bottom: 0;
}

.pv1 {
  padding-top: 0.46875rem;
  padding-bottom: 0.46875rem;
}

.pv2 {
  padding-top: 0.9375rem;
  padding-bottom: 0.9375rem;
}

.pv3 {
  padding-top: 1.875rem;
  padding-bottom: 1.875rem;
}

.pv4 {
  padding-top: 3.75rem;
  padding-bottom: 3.75rem;
}

.pv5 {
  padding-top: 7.5rem;
  padding-bottom: 7.5rem;
}

.pv6 {
  padding-top: 15rem;
  padding-bottom: 15rem;
}

.pv7 {
  padding-top: 30rem;
  padding-bottom: 30rem;
}

.ph0 {
  padding-left: 0;
  padding-right: 0;
}

.ph1 {
  padding-left: 0.46875rem;
  padding-right: 0.46875rem;
}

.ph2 {
  padding-left: 0.9375rem;
  padding-right: 0.9375rem;
}

.ph3 {
  padding-left: 1.875rem;
  padding-right: 1.875rem;
}

.ph4 {
  padding-left: 3.75rem;
  padding-right: 3.75rem;
}

.ph5 {
  padding-left: 7.5rem;
  padding-right: 7.5rem;
}

.ph6 {
  padding-left: 15rem;
  padding-right: 15rem;
}

.ph7 {
  padding-left: 30rem;
  padding-right: 30rem;
}

.ma0 {
  margin: 0;
}

.ma1 {
  margin: 0.46875rem;
}

.ma2 {
  margin: 0.9375rem;
}

.ma3 {
  margin: 1.875rem;
}

.ma4 {
  margin: 3.75rem;
}

.ma5 {
  margin: 7.5rem;
}

.ma6 {
  margin: 15rem;
}

.ma7 {
  margin: 30rem;
}

.ml0 {
  margin-left: 0;
}

.ml1 {
  margin-left: 0.46875rem;
}

.ml2 {
  margin-left: 0.9375rem;
}

.ml3 {
  margin-left: 1.875rem;
}

.ml4 {
  margin-left: 3.75rem;
}

.ml5 {
  margin-left: 7.5rem;
}

.ml6 {
  margin-left: 15rem;
}

.ml7 {
  margin-left: 30rem;
}

.mr0 {
  margin-right: 0;
}

.mr1 {
  margin-right: 0.46875rem;
}

.mr2 {
  margin-right: 0.9375rem;
}

.mr3 {
  margin-right: 1.875rem;
}

.mr4 {
  margin-right: 3.75rem;
}

.mr5 {
  margin-right: 7.5rem;
}

.mr6 {
  margin-right: 15rem;
}

.mr7 {
  margin-right: 30rem;
}

.mb0 {
  margin-bottom: 0;
}

.mb1 {
  margin-bottom: 0.46875rem;
}

.mb2 {
  margin-bottom: 0.9375rem;
}

.mb3 {
  margin-bottom: 1.875rem;
}

.mb4 {
  margin-bottom: 3.75rem;
}

.mb5 {
  margin-bottom: 7.5rem;
}

.mb6 {
  margin-bottom: 15rem;
}

.mb7 {
  margin-bottom: 30rem;
}

.mt0 {
  margin-top: 0;
}

.mt1 {
  margin-top: 0.46875rem;
}

.mt2 {
  margin-top: 0.9375rem;
}

.mt3 {
  margin-top: 1.875rem;
}

.mt4 {
  margin-top: 3.75rem;
}

.mt5 {
  margin-top: 7.5rem;
}

.mt6 {
  margin-top: 15rem;
}

.mt7 {
  margin-top: 30rem;
}

.mv0 {
  margin-top: 0;
  margin-bottom: 0;
}

.mv1 {
  margin-top: 0.46875rem;
  margin-bottom: 0.46875rem;
}

.mv2 {
  margin-top: 0.9375rem;
  margin-bottom: 0.9375rem;
}

.mv3 {
  margin-top: 1.875rem;
  margin-bottom: 1.875rem;
}

.mv4 {
  margin-top: 3.75rem;
  margin-bottom: 3.75rem;
}

.mv5 {
  margin-top: 7.5rem;
  margin-bottom: 7.5rem;
}

.mv6 {
  margin-top: 15rem;
  margin-bottom: 15rem;
}

.mv7 {
  margin-top: 30rem;
  margin-bottom: 30rem;
}

.mh0 {
  margin-left: 0;
  margin-right: 0;
}

.mh1 {
  margin-left: 0.46875rem;
  margin-right: 0.46875rem;
}

.mh2 {
  margin-left: 0.9375rem;
  margin-right: 0.9375rem;
}

.mh3 {
  margin-left: 1.875rem;
  margin-right: 1.875rem;
}

.mh4 {
  margin-left: 3.75rem;
  margin-right: 3.75rem;
}

.mh5 {
  margin-left: 7.5rem;
  margin-right: 7.5rem;
}

.mh6 {
  margin-left: 15rem;
  margin-right: 15rem;
}

.mh7 {
  margin-left: 30rem;
  margin-right: 30rem;
}

.mhauto {
  margin-right: auto;
  margin-left: auto;
}

.mrauto {
  margin-right: auto;
}

.mlauto {
  margin-left: auto;
}

.mtauto {
  margin-top: auto;
}

.tl {
  text-align: left;
}

.tr {
  text-align: right;
}

.tc {
  text-align: center;
}

.tj {
  text-align: justify;
}

.ttc {
  text-transform: capitalize;
}

.ttl {
  text-transform: lowercase;
}

.ttu {
  text-transform: uppercase;
}

.ttn {
  text-transform: none;
}

/* =======================================================================
    Transitions
========================================================================== */
.slide-from-right-enter-active {
  transition: all 0.3s ease;
}

.slide-from-right-leave-active {
  transition: all 0.2s var(--quickEase);
}

.slide-from-right-enter,
.slide-from-right-leave-to {
  transform: translateX(100%);
}

.slide-from-right-enter-to {
  transform: translateX(0%);
}

/*
    Slide down
    //TODO: implement JS solution that measures height
    https://markus.oberlehner.net/blog/transition-to-height-auto-with-vue/
=================================================== */
.slide-from-top-enter-active {
  overflow: hidden;
  transition: all 0.3s ease;
  transition-delay: 0.1s;
}

.slide-from-top-leave-active {
  overflow: hidden;
  transition: all 0.2s ease;
}

.slide-from-top-enter,
.slide-from-top-leave-to {
  max-height: 0px;
  opacity: 0;
}

.slide-from-top-enter-to,
.slide-from-top-leave {
  max-height: 600px;
}

/*
    Slide from left
=================================================== */
.slide-from-left-enter-active {
  transition: all 0.3s ease;
}

.slide-from-left-leave-active {
  transition: all 0.2s var(--quickEase);
}

.slide-from-left-enter,
.slide-from-left-leave-to {
  transform: translateX(-100%);
}

.slide-from-left-enter-to {
  transform: translateX(0%);
}

.canon-u-type--7s {
  font-size: 0.7rem;
  line-height: 1;
}

.canon-u-type--7 {
  font-size: 0.75rem;
  line-height: 1.40625rem;
}

.canon-u-type--6 {
  font-size: 0.875rem;
  line-height: 1.875rem;
}

.canon-u-type--5 {
  font-size: 1rem;
  line-height: 1.875rem;
}

.canon-u-type--4 {
  font-size: 1.25rem;
  line-height: 3.75rem;
}

.canon-u-type--3 {
  font-size: 1.75rem;
  line-height: 3.75rem;
}

.canon-u-type--2 {
  font-size: 2rem;
  line-height: 3.75rem;
}

.canon-u-type--1 {
  font-size: 2.5rem;
  line-height: 3.75rem;
}

.canon-u-compact--7s {
  font-size: 0.7rem;
  line-height: 1;
}

.canon-u-compact--7 {
  font-size: 0.75rem;
  line-height: 1.40625rem;
}

.canon-u-compact--6 {
  font-size: 0.875rem;
  line-height: 1.875rem;
}

.canon-u-compact--5 {
  font-size: 1rem;
  line-height: 1.875rem;
}

.canon-u-compact--4 {
  font-size: 1.25rem;
  line-height: 3.75rem;
}

.canon-u-compact--3 {
  font-size: 1.75rem;
  line-height: 3.75rem;
}

.canon-u-compact--2 {
  font-size: 2rem;
  line-height: 3.75rem;
}

.canon-u-compact--1 {
  font-size: 2.5rem;
  line-height: 3.75rem;
}

.visually-hidden:not(:focus):not(:active) {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap;
}

.nowrap {
  white-space: nowrap;
}

.pre {
  white-space: pre;
}

.w-100 {
  width: 100%;
}

.w-0 {
  width: 0;
}

.w-100 {
  width: 100%;
}

.w-0 {
  width: 0;
}